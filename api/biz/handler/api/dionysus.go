// Code generated by hertz generator.

package api

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/cloudwego/kitex/client"
	"github.com/supermicah/dionysus/api/biz/model/greet"
	greetrpc "github.com/supermicah/dionysus/rpc/kitex_gen/greet"
	dionysusrpc "github.com/supermicah/dionysus/rpc/kitex_gen/rpc/dionysus"
)

// Greet .
// @router greet [GET]
func Greet(ctx context.Context, c *app.RequestContext) {
	var err error
	var req greet.GreetRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	// Use kitex client to make rpc calls and request back-end services
	cli, err := dionysusrpc.NewClient("rpc", client.WithHostPorts("127.0.0.1:8888"))
	if err != nil {
		panic(err)
	}

	respRpc, err := cli.Greet(ctx, &greetrpc.GreetRequest{
		Greet:  "21",
		Name:   "22",
		Gender: "23",
	})
	if err != nil {
		panic(err)
	}

	c.JSON(consts.StatusOK, respRpc)
}
